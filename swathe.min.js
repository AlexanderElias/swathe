// swathe 1.0.1
!function(a){function b(a){return!!a&&("object"==typeof a||"function"==typeof a)}if(!a.Proxy){var c=null;a.a=function(a,d){function e(){}if(!b(a)||!b(d))throw new TypeError("Cannot create proxy with a non-object as target or handler");c=function(){e=function(a){throw new TypeError("Cannot perform '"+a+"' on a proxy that has been revoked")}};var f=d;d={get:null,set:null,apply:null,construct:null};for(var g in f){if(!(g in d))throw new TypeError("Proxy polyfill does not support trap '"+g+"'");d[g]=f[g]}"function"==typeof f&&(d.apply=f.apply.bind(f));var h=this,i=!1,j="function"==typeof a;(d.apply||d.construct||j)&&(h=function(){var b=this&&this.constructor===h;if(e(b?"construct":"apply"),b&&d.construct)return d.construct.call(this,a,arguments);if(!b&&d.apply)return d.apply(a,this,arguments);if(j)return b?(b=Array.prototype.slice.call(arguments),b.unshift(a),new(a.bind.apply(a,b))):a.apply(this,arguments);throw new TypeError(b?"not a constructor":"not a function")},i=!0);var k=d.get?function(a){return e("get"),d.get(this,a,h)}:function(a){return e("get"),this[a]},l=d.set?function(a,b){e("set"),d.set(this,a,b,h)}:function(a,b){e("set"),this[a]=b},m={};if(Object.getOwnPropertyNames(a).forEach(function(b){i&&b in h||(Object.defineProperty(h,b,{enumerable:!!Object.getOwnPropertyDescriptor(a,b).enumerable,get:k.bind(a,b),set:l.bind(a,b)}),m[b]=!0)}),f=!0,Object.setPrototypeOf?Object.setPrototypeOf(h,Object.getPrototypeOf(a)):h.__proto__?h.__proto__=a.__proto__:f=!1,d.get||!f)for(var n in a)m[n]||Object.defineProperty(h,n,{get:k.bind(a,n)});return Object.seal(a),Object.seal(h),h},a.a.b=function(b,d){return{proxy:new a.a(b,d),revoke:c}},a.a.revocable=a.a.b,a.Proxy=a.a}}("undefined"!=typeof module&&module.exports?global:window),function(){"use strict";function SyncView(a,b){var c=document.querySelectorAll('[data-bind~="'+b+'"]');c.forEach(function(c){var d=c.getAttribute("data-bind").split(":")[0].trim(),e=c.getAttribute("data-bind").split(":")[1].trim();b===e&&(c[d]=a)})}function ObserveElements(a,b){return a.forEach(function(a){a.addEventListener("keyup",function(a){var c=a.target,d=c.value,e=c.getAttribute("data-bind"),f=e.split(":")[0].trim(),g=e.split(":")[1].trim();b(f,g,d)},!1)}),a}function ObserveObject(a,b,c){return c||(c=""),new Proxy(a,{set:function(a,d,e){return a[d]===e||(a[d]=e,b(c+d,e),!0)},get:function(a,d){return isObject(a[d])?ObserveObject(a[d],b,c+d+"."):a[d]}})}function Controller(scope,model){var self=this;if(!scope)throw new Error("Controller: scope parameter required");if(!model)throw new Error("Controller: model parameter required");scope="string"==typeof scope?document.querySelector(scope):scope,self._scope=scope,self._model=model,self._elements=scope.querySelectorAll('[data-bind^="value"]'),self.model=ObserveObject(self._model,function(a,b){SyncView(b,a)}),self.view=ObserveElements(self._elements,function(keyBind,valueBind,value){eval("self.model."+valueBind+" = value")})}function isObject(a){return null!==a&&void 0!==a&&a.constructor===Object}window.Swathe={controller:function(a,b){return new Controller(a,b)}}}();
